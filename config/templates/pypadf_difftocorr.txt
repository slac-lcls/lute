[PY3CORRELATION]

# the path where output files will be saved
outpath = {{ output_path }}

# path where diffraction files are located
samplepath = {{ input_path }}

# a binary mask of good detector pixels, if required
#maskname = ./output/mask/hex_mask.h5

# the tag is prepended to all output files
# change it if you don't want to overwrite previous results
tag = {{ tag }}

# sample to detector distance (metres)
dz = {{ sample_to_detector_distance }}

# photon wavelength (metres)
wl = {{ photon_wavelength_m }}

# width of a detector pixel (metres)
pw = {{ detector_pixel_width_m }}

# no. of theta samples to use for the correlation function
nth = {{ number_theta_samples }}

# number of CPU threads to use
nthreads = {{ nthreads }}

# number of the starting diffraction pattern
nstart = {{ i_pattern_start }}

# number of diffraction patterns to correlate
npatterns = {{ n_patterns }}

# rebin each diffraction pattern by this factor
rebin = {{ bin_factor }}

# Set this flag to use the mask
maskflag = {{ mask_flag }}

# set this flag to output processed (=shifted, cropped, rebinned)  diffraction patterns
outputdp = {{ process_flag }}

# shift the centre of the diffraction pattern
dp_shift_flag = {{ shift_center_flag }}

# set this flag to crop the diffraction patterns
cropflag = {{ crop_flag }}

# x and y width of crop area (pixels)
nxcrop = {{ x_width_pixels }}
nycrop = {{ y_width_pixles }}

# number of pixels to shift in x and y
# can use sub-pixel shifts (=decimel values)
shiftx = {{ x_shift_pixels }}
shifty = {{ y_shift_pixels }}